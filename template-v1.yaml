AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Moving Company Crew AI - Simple Planner Agent'

Globals:
  Function:
    Timeout: 300
    MemorySize: 512
    Runtime: python3.13
    Environment:
      Variables:
        LOG_LEVEL: INFO

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]

Resources:
  # IAM Role for Step Functions
  StepFunctionsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StepFunctionsExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !GetAtt PlannerAgentFunction.Arn

  # IAM Role for Lambda Functions
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: CrewAILambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - states:StartExecution
                  - states:DescribeExecution
                  - states:GetExecutionHistory
                Resource: '*'

  # Planner Agent Lambda Function
  PlannerAgentFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${Environment}-moving-planner-agent'
      CodeUri: src/planner/
      Handler: handler.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn

  # Step Functions State Machine (Just Planner Agent)
  MovingCrewStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub '${Environment}-moving-crew-workflow'
      RoleArn: !GetAtt StepFunctionsRole.Arn
      DefinitionString: !Sub |
        {
          "Comment": "Moving Company Crew AI - Planner Agent Only",
          "StartAt": "PlannerAgent",
          "States": {
            "PlannerAgent": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "${PlannerAgentFunction}",
                "Payload.$": "$"
              },
              "End": true
            }
          }
        }

  # API Gateway
  MovingCrewApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub '${Environment}-moving-crew-api'
      StageName: !Ref Environment
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

  # API Gateway Lambda Function
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${Environment}-moving-crew-api'
      CodeUri: src/api/
      Handler: handler.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          STATE_MACHINE_ARN: !Ref MovingCrewStateMachine
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MovingCrewApi
            Path: /query
            Method: post
        StatusEvent:
          Type: Api
          Properties:
            RestApiId: !Ref MovingCrewApi
            Path: /status/{execution_id}
            Method: get

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${MovingCrewApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/query"
    Export:
      Name: !Sub "${Environment}-moving-crew-api-endpoint"
      
  StateMachineArn:
    Description: "Step Functions State Machine ARN"
    Value: !Ref MovingCrewStateMachine
    Export:
      Name: !Sub "${Environment}-moving-crew-state-machine"